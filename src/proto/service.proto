syntax = "proto3";

package oceandoc.proto;

import "src/proto/error.proto";
import "src/proto/data.proto";

message Context {
  repeated string private_ipv4 = 1;
  repeated string private_ipv6 = 2;
  repeated string public_ipv4 = 3;
  repeated string public_ipv6 = 4;
  repeated string mac = 5;
}

enum UserOp {
  UserUnused = 0;
  UserCreate = 1;
  UserDelete = 2;
  UserLogin = 3;
  UserLogout = 4;
  UserChangePassword = 5;
  UserUpdateToken = 6;
}

message UserReq {
  string request_id = 1;
  UserOp op = 2;
  string user = 3;
  string password = 4;
  string token = 5;
  string to_delete_user = 6;
  string old_password = 7;
}

message UserRes {
  ErrCode err_code = 1;
  string token = 5;
}

enum ServerOp {
  ServerUnused = 0;
  ServerStatus = 1;
  ServerRestart = 2;
  ServerShutdown = 3;
  ServerFullScan = 4;
  ServerHandShake = 5;
  ServerFindingServer = 6;
}

message ServerReq {
  string request_id = 1;
  ServerOp op = 2;
  string path = 3;
  string repo_uuid = 4;
}

message ServerRes {
  ErrCode err_code = 1;
  string status = 2;
  string server_uuid = 3;
  string handshake_msg = 4;
}

enum RepoOp {
  RepoUnused = 0;
  RepoListServerDir = 1;
  RepoCreateServerDir = 2;
  RepoListUserRepo = 3;
  RepoCreateRepo = 4;
  RepoDeleteRepo = 5;
  RepoChangeRepoOwner = 6;
  RepoCreateRepoDir = 7;
  RepoDeleteRepoDir = 8;
  RepoDeleteRepoFile = 9;
  RepoListRepoDir = 10;
  RepoListRepoMediaFiles = 11;
}

message RepoReq {
  string request_id = 1;
  string token = 2;
  string user = 3;
  RepoOp op = 4;
  RepoType type = 5;
  string repo_uuid = 6;
  string repo_name = 7;
  string dir = 8;
  int32 file_offset = 9;
  int32 file_limit = 10;
}

message RepoRes {
  ErrCode err_code = 1;
  map<string, RepoMeta> repos = 2;
  repeated File files = 3;
}

enum FileOp {
  FileUnused = 0;
  FileExists = 1;
  FilePut = 2;
  FileDelete = 3;
  FileSaveSuccess = 4;
  FileGet = 5;
}

message FileReq {
  string request_id = 1;
  string user = 2;
  string token = 3;
  FileOp op = 4;
  RepoType repo_type = 5;
  string repo_uuid = 6;
  string repo_location = 7;
  string repo_dir = 8;
  int32 cur_part = 9;
  int64 size_per_part = 10;
  File file = 11;
  bytes content = 12;
}

message FileRes {
  ErrCode err_code = 1;
  string file_hash = 5;
  int32 cur_part = 6;
  string request_id = 7;
  FileOp op = 8;
  bool can_skip_upload = 9;
  bytes content = 10;
}

service OceanFile {
  rpc UserOp(UserReq) returns (UserRes);
  rpc ServerOp(ServerReq) returns (ServerRes);
  rpc RepoOp(RepoReq) returns (RepoRes);
  rpc FileOp(stream FileReq) returns (stream FileRes);
}

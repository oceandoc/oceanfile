syntax = "proto3";

package oceandoc.proto;

import "src/proto/error.proto";

message Context {
  repeated string private_ipv4 = 1;
  repeated string private_ipv6 = 2;
  repeated string public_ipv4 = 3;
  repeated string public_ipv6 = 4;
  repeated string mac = 5;
}

message StatusReq {
  string request_id = 1;
  Context context = 2;
}

message StatusRes {
  ErrCode err_code = 1;
  string status = 2;
}

enum Op {
  Op_Unused = 0;
  File_Put = 1;
  File_Delete = 2;
  File_Chmod = 3;
  File_Chowner = 4;
  Repo_Create = 5;
  Repo_Delete = 6;
  Repo_Chmod = 7;
  Repo_Chowner = 8;
}

message FileReq {
  string request_id = 1;
  Op op = 3;
  string path = 4;
  string sha256 = 5;
  int64 size = 6;
  bytes content = 7;
  int32 partition_num = 8;
  string repo_uuid = 9;
}

message FileRes {
  ErrCode err_code = 1;
  string path = 2;
  string sha256 = 3;
  int32 partition_num = 4;
}

message RepoReq {
  string request_id = 1;
  Op op = 2;
  string path = 3;
  string repo_uuid = 4;
}

message RepoRes {
  ErrCode err_code = 1;
  string repo_uuid = 2;
}

service OceanFile {
  rpc Status(StatusReq) returns (StatusRes);
  rpc FileOp(stream FileReq) returns (stream FileRes);
  rpc RepoOp(RepoReq) returns (RepoRes);
}

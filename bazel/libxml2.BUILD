load("@bazel_skylib//lib:selects.bzl", "selects")
load("@bazel_skylib//rules:write_file.bzl", "write_file")
load("@oceandoc//bazel:common.bzl", "GLOBAL_COPTS", "GLOBAL_DEFINES", "GLOBAL_LOCAL_DEFINES", "template_rule")

package(default_visibility = ["//visibility:public"])

COPTS = GLOBAL_COPTS + select({
    "@platforms//os:linux": [],
    "@platforms//os:osx": [],
    "@platforms//os:windows": [],
    "//conditions:default": [
        "-std=c11",
        "-O3",
        "-fPIC",
    ],
})

LOCAL_DEFINES = GLOBAL_LOCAL_DEFINES + select({
    "@platforms//os:linux": [],
    "@platforms//os:osx": [],
    "@platforms//os:windows": [],
    "//conditions:default": [],
})

cc_library(
    name = "libxml2",
    srcs = glob(
        [
            "**/*.c",
            "HTMLparser.c",
        ],
        exclude = [
            "test/**/*.c",
            "test/**/*.h",
            "os400/**/*.c",
            "os400/**/*.h",
            "python/**/*.c",
            "python/**/*.h",
            "fuzz/**/*.h",
            "fuzz/**/*.c",
            "example/**/*.h",
            "example/**/*.c",
            "test*.c",
            "runsuite.c",
            "runtest.c",
            "runxmlconf.c",
            "xmllint.c",
            "xmlcatalog.c",
        ],
    ) + select({
        "@oceandoc//bazel:linux_x86_64": [],
        "@oceandoc//bazel:osx_x86_64": [],
        "@oceandoc//bazel:windows_x86_64": [],
        "@platforms//cpu:aarch64": [],
        "//conditions:default": [],
    }) + [
        ":config_h",
        ":xmlversion_h",
    ],
    hdrs = glob(
        [
            "**/*.h",
            "include/libxml/*.h",
            "xmlversion.h",
            "html5ent.inc",
        ],
        exclude = [
            "test/**/*.h",
        ],
    ),
    copts = COPTS + [
        "-Iexternal/libxml2/include",
        "-Iexternal/libxml2/include/libxml",
        "-Iexternal/libxml2",
        "-I.",
    ],
    includes = [
        ".",
        "fuzz",
        "include",
    ],
    local_defines = LOCAL_DEFINES,
    visibility = ["//visibility:public"],
    deps = [],
)

write_file(
    name = "xmlversion_h_in",
    out = "xmlversion.h.in",
    content = [
        "/*",
        "* Summary: compile-time version information",
        "* Description: compile-time version information for the XML library",
        "*",
        "* Copy: See Copyright for the status of this software.",
        "*",
        "* Author: Daniel Veillard",
        "*/",
        "",
        "#ifndef __XML_VERSION_H__",
        "#define __XML_VERSION_H__",
        "",
        "/**",
        "* LIBXML_DOTTED_VERSION:",
        "*",
        "* the version string like \"1.2.3\"",
        "*/",
        "#define LIBXML_DOTTED_VERSION \"2.14.0\"",
        "",
        "/**",
        "* LIBXML_VERSION:",
        "*",
        "* the version number: 1.2.3 value is 10203",
        "*/",
        "#define LIBXML_VERSION 21400",
        "",
        "/**",
        "* LIBXML_VERSION_STRING:",
        "*",
        "* the version number string, 1.2.3 value is \"10203\"",
        "*/",
        "#define LIBXML_VERSION_STRING \"21400\"",
        "",
        "/**",
        "* LIBXML_VERSION_EXTRA:",
        "*",
        "* extra version information, used to show a git commit description",
        "*/",
        "#define LIBXML_VERSION_EXTRA \"-GITv2.13.0-495-g71c37a56\"",
        "",
        "/**",
        "* LIBXML_TEST_VERSION:",
        "*",
        "* Macro to check that the libxml version in use is compatible with",
        "* the version the software has been compiled against",
        "*/",
        "#define LIBXML_TEST_VERSION xmlCheckVersion(21400);",
        "",
        "/**",
        "* LIBXML_THREAD_ENABLED:",
        "*",
        "* Whether the thread support is configured in",
        "*/",
        "#if 1",
        "#define LIBXML_THREAD_ENABLED",
        "#endif",
        "",
        "/**",
        "* LIBXML_THREAD_ALLOC_ENABLED:",
        "*",
        "* Whether the allocation hooks are per-thread",
        "*/",
        "#if 0",
        "#define LIBXML_THREAD_ALLOC_ENABLED",
        "#endif",
        "",
        "/**",
        "* LIBXML_TREE_ENABLED:",
        "*",
        "* Always enabled since 2.14.0",
        "*/",
        "#define LIBXML_TREE_ENABLED",
        "",
        "/**",
        "* LIBXML_OUTPUT_ENABLED:",
        "*",
        "* Whether the serialization/saving support is configured in",
        "*/",
        "#if 1",
        "#define LIBXML_OUTPUT_ENABLED",
        "#endif",
        "",
        "/**",
        "* LIBXML_PUSH_ENABLED:",
        "*",
        "* Whether the push parsing interfaces are configured in",
        "*/",
        "#if 1",
        "#define LIBXML_PUSH_ENABLED",
        "#endif",
        "",
        "/**",
        "* LIBXML_READER_ENABLED:",
        "*",
        "* Whether the xmlReader parsing interface is configured in",
        "*/",
        "#if 1",
        "#define LIBXML_READER_ENABLED",
        "#endif",
        "",
        "/**",
        "* LIBXML_PATTERN_ENABLED:",
        "*",
        "* Whether the xmlPattern node selection interface is configured in",
        "*/",
        "#if 1",
        "#define LIBXML_PATTERN_ENABLED",
        "#endif",
        "",
        "/**",
        "* LIBXML_WRITER_ENABLED:",
        "*",
        "* Whether the xmlWriter saving interface is configured in",
        "*/",
        "#if 1",
        "#define LIBXML_WRITER_ENABLED",
        "#endif",
        "",
        "/**",
        "* LIBXML_SAX1_ENABLED:",
        "*",
        "* Whether the older SAX1 interface is configured in",
        "*/",
        "#if 1",
        "#define LIBXML_SAX1_ENABLED",
        "#endif",
        "",
        "/**",
        "* LIBXML_HTTP_ENABLED:",
        "*",
        "* Whether the HTTP support is configured in",
        "*/",
        "#if 0",
        "#define LIBXML_HTTP_ENABLED",
        "#endif",
        "",
        "/**",
        "* LIBXML_VALID_ENABLED:",
        "*",
        "* Whether the DTD validation support is configured in",
        "*/",
        "#if 1",
        "#define LIBXML_VALID_ENABLED",
        "#endif",
        "",
        "/**",
        "* LIBXML_HTML_ENABLED:",
        "*",
        "* Whether the HTML support is configured in",
        "*/",
        "#if 1",
        "#define LIBXML_HTML_ENABLED",
        "#endif",
        "",
        "/**",
        "* LIBXML_LEGACY_ENABLED:",
        "*",
        "* Whether the deprecated APIs are compiled in for compatibility",
        "*/",
        "#if 0",
        "#define LIBXML_LEGACY_ENABLED",
        "#endif",
        "",
        "/**",
        "* LIBXML_C14N_ENABLED:",
        "*",
        "* Whether the Canonicalization support is configured in",
        "*/",
        "#if 1",
        "#define LIBXML_C14N_ENABLED",
        "#endif",
        "",
        "/**",
        "* LIBXML_CATALOG_ENABLED:",
        "*",
        "* Whether the Catalog support is configured in",
        "*/",
        "#if 1",
        "#define LIBXML_CATALOG_ENABLED",
        "#endif",
        "",
        "/**",
        "* LIBXML_XPATH_ENABLED:",
        "*",
        "* Whether XPath is configured in",
        "*/",
        "#if 1",
        "#define LIBXML_XPATH_ENABLED",
        "#endif",
        "",
        "/**",
        "* LIBXML_XPTR_ENABLED:",
        "*",
        "* Whether XPointer is configured in",
        "*/",
        "#if 1",
        "#define LIBXML_XPTR_ENABLED",
        "#endif",
        "",
        "/**",
        "* LIBXML_XINCLUDE_ENABLED:",
        "*",
        "* Whether XInclude is configured in",
        "*/",
        "#if 1",
        "#define LIBXML_XINCLUDE_ENABLED",
        "#endif",
        "",
        "/**",
        "* LIBXML_ICONV_ENABLED:",
        "*",
        "* Whether iconv support is available",
        "*/",
        "#if 1",
        "#define LIBXML_ICONV_ENABLED",
        "#endif",
        "",
        "/**",
        "* LIBXML_ICU_ENABLED:",
        "*",
        "* Whether icu support is available",
        "*/",
        "#if 0",
        "#define LIBXML_ICU_ENABLED",
        "#endif",
        "",
        "/**",
        "* LIBXML_ISO8859X_ENABLED:",
        "*",
        "* Whether ISO-8859-* support is made available in case iconv is not",
        "*/",
        "#if 1",
        "#define LIBXML_ISO8859X_ENABLED",
        "#endif",
        "",
        "/**",
        "* LIBXML_DEBUG_ENABLED:",
        "*",
        "* Whether Debugging module is configured in",
        "*/",
        "#if 1",
        "#define LIBXML_DEBUG_ENABLED",
        "#endif",
        "",
        "/**",
        "* LIBXML_UNICODE_ENABLED:",
        "*",
        "* Whether the Unicode related interfaces are compiled in",
        "*/",
        "#if 1",
        "#define LIBXML_UNICODE_ENABLED",
        "#endif",
        "",
        "/**",
        "* LIBXML_REGEXP_ENABLED:",
        "*",
        "* Whether the regular expressions interfaces are compiled in",
        "*/",
        "#if 1",
        "#define LIBXML_REGEXP_ENABLED",
        "#endif",
        "",
        "/**",
        "* LIBXML_AUTOMATA_ENABLED:",
        "*",
        "* Whether the automata interfaces are compiled in",
        "*/",
        "#if 1",
        "#define LIBXML_AUTOMATA_ENABLED",
        "#endif",
        "",
        "/**",
        "* LIBXML_SCHEMAS_ENABLED:",
        "*",
        "* Whether the Schemas validation interfaces are compiled in",
        "*/",
        "#if 1",
        "#define LIBXML_SCHEMAS_ENABLED",
        "#endif",
        "",
        "/**",
        "* LIBXML_SCHEMATRON_ENABLED:",
        "*",
        "* Whether the Schematron validation interfaces are compiled in",
        "*/",
        "#if 1",
        "#define LIBXML_SCHEMATRON_ENABLED",
        "#endif",
        "",
        "/**",
        "* LIBXML_MODULES_ENABLED:",
        "*",
        "* Whether the module interfaces are compiled in",
        "*/",
        "#if 1",
        "#define LIBXML_MODULES_ENABLED",
        "/**",
        "* LIBXML_MODULE_EXTENSION:",
        "*",
        "* the string suffix used by dynamic modules (usually shared libraries)",
        "*/",
        "#define LIBXML_MODULE_EXTENSION \".so\"",
        "#endif",
        "",
        "/**",
        "* LIBXML_ZLIB_ENABLED:",
        "*",
        "* Whether the Zlib support is compiled in",
        "*/",
        "#if 0",
        "#define LIBXML_ZLIB_ENABLED",
        "#endif",
        "",
        "/**",
        "* LIBXML_LZMA_ENABLED:",
        "*",
        "* Whether the Lzma support is compiled in",
        "*/",
        "#if 0",
        "#define LIBXML_LZMA_ENABLED",
        "#endif",
        "",
        "#include <libxml/xmlexports.h>",
        "",
        "#endif",
    ],
)

template_rule(
    name = "xmlversion_h",
    src = ":xmlversion_h_in",
    out = "include/libxml/xmlversion.h",
    substitutions = select({
        "@platforms//os:linux": {
        },
        "@platforms//os:osx": {
        },
        "@platforms//os:windows": {
        },
        "//conditions:default": {},
    }) | select({
        "@oceandoc//bazel:redhat": {
        },
        "//conditions:default": {},
    }),
)

write_file(
    name = "config_h_in",
    out = "config.h.in",
    content = [
        "/* config.h.  Generated from config.h.in by configure.  */",
        "/* config.h.in.  Generated from configure.ac by autoheader.  */",
        "",
        "/* Define to 1 if you have the declaration of `getentropy', and to 0 if you",
        "don't. */",
        "#define HAVE_DECL_GETENTROPY 1",
        "",
        "/* Define to 1 if you have the declaration of `glob', and to 0 if you don't.",
        "*/",
        "#define HAVE_DECL_GLOB 1",
        "",
        "/* Define to 1 if you have the declaration of `mmap', and to 0 if you don't.",
        "*/",
        "#define HAVE_DECL_MMAP 1",
        "",
        "/* Define to 1 if you have the <dlfcn.h> header file. */",
        "#define HAVE_DLFCN_H 1",
        "",
        "/* Have dlopen based dso */",
        "#define HAVE_DLOPEN /**/",
        "",
        "/* Define to 1 if the system has the `destructor' function attribute */",
        "#define HAVE_FUNC_ATTRIBUTE_DESTRUCTOR 1",
        "",
        "/* Define to 1 if you have the <inttypes.h> header file. */",
        "#define HAVE_INTTYPES_H 1",
        "",
        "/* Define if history library is available */",
        "/* #undef HAVE_LIBHISTORY */",
        "",
        "/* Define if readline library is available */",
        "/* #undef HAVE_LIBREADLINE */",
        "",
        "/* Define to 1 if you have the <lzma.h> header file. */",
        "/* #undef HAVE_LZMA_H */",
        "",
        "/* Define to 1 if you have the <poll.h> header file. */",
        "/* #undef HAVE_POLL_H */",
        "",
        "/* Define to 1 if you have the <pthread.h> header file. */",
        "#define HAVE_PTHREAD_H 1",
        "",
        "/* Have shl_load based dso */",
        "/* #undef HAVE_SHLLOAD */",
        "",
        "/* Define to 1 if you have the <stdint.h> header file. */",
        "#define HAVE_STDINT_H 1",
        "",
        "/* Define to 1 if you have the <stdio.h> header file. */",
        "#define HAVE_STDIO_H 1",
        "",
        "/* Define to 1 if you have the <stdlib.h> header file. */",
        "#define HAVE_STDLIB_H 1",
        "",
        "/* Define to 1 if you have the <strings.h> header file. */",
        "#define HAVE_STRINGS_H 1",
        "",
        "/* Define to 1 if you have the <string.h> header file. */",
        "#define HAVE_STRING_H 1",
        "",
        "/* Define to 1 if you have the <sys/stat.h> header file. */",
        "#define HAVE_SYS_STAT_H 1",
        "",
        "/* Define to 1 if you have the <sys/types.h> header file. */",
        "#define HAVE_SYS_TYPES_H 1",
        "",
        "/* Define to 1 if you have the <unistd.h> header file. */",
        "#define HAVE_UNISTD_H 1",
        "",
        "/* Define to 1 if you have the <zlib.h> header file. */",
        "/* #undef HAVE_ZLIB_H */",
        "",
        "/* Define to the sub-directory where libtool stores uninstalled libraries. */",
        "#define LT_OBJDIR \".libs/\"",
        "",
        "/* Name of package */",
        "#define PACKAGE \"libxml2\"",
        "",
        "/* Define to the address where bug reports for this package should be sent. */",
        "#define PACKAGE_BUGREPORT \"\"",
        "",
        "/* Define to the full name of this package. */",
        "#define PACKAGE_NAME \"libxml2\"",
        "",
        "/* Define to the full name and version of this package. */",
        "#define PACKAGE_STRING \"libxml2 2.14.0\"",
        "",
        "/* Define to the one symbol short name of this package. */",
        "#define PACKAGE_TARNAME \"libxml2\"",
        "",
        "/* Define to the home page for this package. */",
        "#define PACKAGE_URL \"\"",
        "",
        "/* Define to the version of this package. */",
        "#define PACKAGE_VERSION \"2.14.0\"",
        "",
        "/* Define to 1 if all of the C90 standard headers exist (not just the ones",
        "required in a freestanding environment). This macro is provided for",
        "backward compatibility; new code need not use it. */",
        "#define STDC_HEADERS 1",
        "",
        "/* Version number of package */",
        "#define VERSION \"2.14.0\"",
        "",
        "/* System configuration directory (/etc) */",
        "#define XML_SYSCONFDIR \"/usr/local/etc\"",
        "",
        "/* TLS specifier */",
        "/* #undef XML_THREAD_LOCAL */",
    ],
)

template_rule(
    name = "config_h",
    src = ":config_h_in",
    out = "config.h",
    substitutions = select({
        "@platforms//os:linux": {
        },
        "@platforms//os:osx": {
        },
        "@platforms//os:windows": {
        },
        "//conditions:default": {},
    }) | select({
        "@oceandoc//bazel:redhat": {
        },
        "//conditions:default": {},
    }),
)

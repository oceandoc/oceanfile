load("@bazel_skylib//lib:selects.bzl", "selects")
load("@bazel_skylib//rules:write_file.bzl", "write_file")
load("@oceandoc//bazel:common.bzl", "GLOBAL_COPTS", "GLOBAL_DEFINES", "GLOBAL_LOCAL_DEFINES", "template_rule")

package(default_visibility = ["//visibility:public"])

COPTS = GLOBAL_COPTS + select({
    "@platforms//os:linux": [],
    "@platforms//os:osx": [],
    "@platforms//os:windows": [],
    "//conditions:default": [
        "-O3",
        "-fPIC",
    ],
})

LOCAL_DEFINES = GLOBAL_LOCAL_DEFINES + select({
    "@platforms//os:linux": [],
    "@platforms//os:osx": [],
    "@platforms//os:windows": [],
    "//conditions:default": [],
})

common_includes = [
    "-Iexternal/libheif",
    "-Iexternal/libheif/libheif",
    "-Iexternal/libheif/libheif/api/libheif",
]

cc_library(
    name = "libheif",
    srcs = glob(
        ["libheif/**/*.cc"],
        exclude = [
            "libheif/plugins/*.cc",
            "libheif/plugins/*.h",
            "libheif/plugins_windows.h",
            "libheif/plugins_windows.cc",
            "libheif/plugins_unix.cc",
            "libheif/plugins_unix.h",
        ],
    ) + [
        ":heif_version_h",
    ],
    hdrs = glob([
        "libheif/**/*.h",
        "libheif/*.h",
        "libheif/api/libheif/*.h",
    ]),
    copts = select({
        "@platforms//os:linux": [
            "-std=c++20",  # Linux 使用 GCC/Clang C++20
        ],
        "@platforms//os:osx": [],  # macOS 环境下没有特殊选项
        "@platforms//os:windows": [
            "/std:c++20",  # Windows 使用 MSVC C++20
        ],
        "//conditions:default": [
			"-std=c++20",
		],
    }) + common_includes,
	
    includes = [
        "libheif",
        "libheif/api",
    ],
    visibility = ["//visibility:public"],
    deps = ["@openjpeg"],
)

write_file(
    name = "heif_version_h_in",
    out = "heif_version.h.in",
    content = [
        "/*",
        "* HEIF codec.",
        "* Copyright (c) 2017 Dirk Farin <dirk.farin@gmail.com>",
        "*",
        "* This file is part of libheif.",
        "*",
        "* libheif is free software: you can redistribute it and/or modify",
        "* it under the terms of the GNU Lesser General Public License as",
        "* published by the Free Software Foundation, either version 3 of",
        "* the License, or (at your option) any later version.",
        "*",
        "* libheif is distributed in the hope that it will be useful,",
        "* but WITHOUT ANY WARRANTY; without even the implied warranty of",
        "* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the",
        "* GNU Lesser General Public License for more details.",
        "*",
        "* You should have received a copy of the GNU Lesser General Public License",
        "* along with libheif.  If not, see <http://www.gnu.org/licenses/>.",
        "*/",
        "",
        "/* heif_version.h",
        "*",
        "* This file was automatically generated when libheif was built.",
        "*",
        "* DO NOT EDIT THIS FILE.",
        "*/",
        "#ifndef LIBHEIF_HEIF_VERSION_H",
        "#define LIBHEIF_HEIF_VERSION_H",
        "",
        "/* Numeric representation of the version */",
        "#define LIBHEIF_NUMERIC_VERSION ((1<<24) | (19<<16) | (5<<8) | 0)",
        "",
        "/* Version string */",
        "#define LIBHEIF_VERSION \"1.19.5\"",
        "",
        "#define LIBHEIF_PLUGIN_DIRECTORY \"/usr/local/lib/libheif\"",
        "",
        "#endif  // LIBHEIF_HEIF_VERSION_H",
    ],
)

template_rule(
    name = "heif_version_h",
    src = ":heif_version_h_in",
    out = "libheif/api/libheif/heif_version.h",
    substitutions = select({
        "@platforms//os:linux": {
        },
        "@platforms//os:osx": {
        },
        "@platforms//os:windows": {
        },
        "//conditions:default": {},
    }) | select({
        "@oceandoc//bazel:redhat": {
        },
        "//conditions:default": {},
    }),
)
